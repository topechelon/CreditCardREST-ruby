=begin
#Credit Card API v1

#Credit Card API for authorizing and charging credit cards.

OpenAPI spec version: 1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require "uri"

module CreditCardRestClient
  class StatusApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Check external API status
    # Authenticates given credentials and reports external API status
    # @param [Hash] opts the optional parameters
    # @option opts [ExternalStatusRequest] :request 
    # @return [ExternalStatusResponse]
    def external_status_check(opts = {})
      data, _status_code, _headers = external_status_check_with_http_info(opts)
      return data
    end

    # Check external API status
    # Authenticates given credentials and reports external API status
    # @param [Hash] opts the optional parameters
    # @option opts [ExternalStatusRequest] :request 
    # @return [Array<(ExternalStatusResponse, Fixnum, Hash)>] ExternalStatusResponse data, response status code and response headers
    def external_status_check_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: StatusApi.external_status_check ..."
      end
      # resource path
      local_var_path = "/api/creditcard/status/external"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'request'])
      auth_names = ['basic']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ExternalStatusResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StatusApi#external_status_check\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # API status check
    # Checks to see if the API can return the current system time
    # @param [Hash] opts the optional parameters
    # @return [StatusResponse]
    def status_check(opts = {})
      data, _status_code, _headers = status_check_with_http_info(opts)
      return data
    end

    # API status check
    # Checks to see if the API can return the current system time
    # @param [Hash] opts the optional parameters
    # @return [Array<(StatusResponse, Fixnum, Hash)>] StatusResponse data, response status code and response headers
    def status_check_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: StatusApi.status_check ..."
      end
      # resource path
      local_var_path = "/api/creditcard/status"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['basic']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StatusResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StatusApi#status_check\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
